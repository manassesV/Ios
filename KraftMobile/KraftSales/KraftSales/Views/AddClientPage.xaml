<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="KraftSales.Views.AddClientPage"
             xmlns:views="clr-namespace:KraftSales.Views;assembly=KraftSales"
             xmlns:converters="clr-namespace:KraftSales.Converters;assembly=KraftSales"
             xmlns:triggers="clr-namespace:KraftSales.Triggers;assembly=KraftSales"
             xmlns:behaviors="clr-namespace:KraftSales.Behaviors;assembly=KraftSales"
			 xmlns:viewModelBase="clr-namespace:KraftSales.ViewModels.Base;assembly=KraftSales"
			 viewModelBase:ViewModelLocator.AutoWireViewModel="true">
    <ContentPage.Title>
        <OnPlatform x:TypeArguments="x:String" iOS="DKP Fair" WinPhone="Kraft Fair" />
    </ContentPage.Title>
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid Padding="0" ColumnSpacing="0" RowSpacing="0" BackgroundColor="{StaticResource BackgroundColor}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <StackLayout Orientation="Horizontal" HorizontalOptions="Center" Margin="24">
                <Label Text="[" TextColor="{StaticResource LightBlueColor}"/>
                <Label Text="CLIENTE NOVO" FontAttributes="Bold"/>
                <Label Text="]" TextColor="{StaticResource LightBlueColor}"/>
            </StackLayout>
            <!--CADASTRO CLIENTE FORM-->
            <ScrollView Grid.Row="2">
                <StackLayout Grid.Row="2" Margin="10,0,10,10">
                    <Label Text="Tipo Cliente" Style="{StaticResource HeaderLabelStyle}" />
                    <Picker ItemsSource="{Binding TiposCliente}" VerticalOptions="Fill" SelectedIndex="{Binding TipoClienteSelectedIndex}" />

                    <Label Text="{Binding NomeCodigoCliente}" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding Cnpj.Value, Mode=TwoWay}" Keyboard="Numeric" Style="{StaticResource EntryStyle}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateCnpjCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding Cnpj.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding Cnpj.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />


                    <Label Text="Razão Social" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding RazaoSocial.Value, Mode=TwoWay}" Style="{StaticResource EntryStyle}">
                        <Entry.Keyboard>
                            <Keyboard x:FactoryMethod="Create">
                                <x:Arguments>
                                    <KeyboardFlags>CapitalizeSentence</KeyboardFlags>
                                </x:Arguments>
                            </Keyboard>
                        </Entry.Keyboard>
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateRazaoSocialCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding RazaoSocial.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding RazaoSocial.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />

                    <Label Text="Nome Fantasia" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding NomeFantasia.Value, Mode=TwoWay}" Style="{StaticResource EntryStyle}">
                        <Entry.Keyboard>
                            <Keyboard x:FactoryMethod="Create">
                                <x:Arguments>
                                    <KeyboardFlags>CapitalizeSentence</KeyboardFlags>
                                </x:Arguments>
                            </Keyboard>
                        </Entry.Keyboard>
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateNomeFantasiaCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding NomeFantasia.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding NomeFantasia.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />

                    <Label Text="Nome Contato" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding NomeContato.Value, Mode=TwoWay}" Style="{StaticResource EntryStyle}">
                        <Entry.Keyboard>
                            <Keyboard x:FactoryMethod="Create">
                                <x:Arguments>
                                    <KeyboardFlags>CapitalizeSentence</KeyboardFlags>
                                </x:Arguments>
                            </Keyboard>
                        </Entry.Keyboard>
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateNomeContatoCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding NomeContato.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding NomeContato.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />

                    <Label Text="E-mail Contato" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding EmailContato.Value, Mode=TwoWay}" Keyboard="Email" Style="{StaticResource EntryStyle}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateEmailContatoCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding EmailContato.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding EmailContato.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />

                    <Label Text="Telefone" Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding TelefoneContato.Value, Mode=TwoWay}" Keyboard="Telephone" Style="{StaticResource EntryStyle}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior EventName="TextChanged" Command="{Binding ValidateTelefoneContatoCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger TargetType="Entry" Binding="{Binding TelefoneContato.IsValid}" Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding TelefoneContato.Errors, Converter={StaticResource FirstValidationErrorConverter}" Style="{StaticResource ValidationErrorLabelStyle}" />

                    <Button Text="SALVAR" Command="{Binding SaveCommand}" Margin="10,0,10,10" />

                </StackLayout>
            </ScrollView>
            
            <!--BOTAO ADICIONAR-->
            <!--<Grid BackgroundColor="{StaticResource LightBlueColor}" Grid.Row="3" Padding="0" ColumnSpacing="0" RowSpacing="0">
                <Label Text="[ SALVAR ]" Style="{StaticResource LabelButtonStyle}"/>
                <Grid.GestureRecognizers>
                    <TapGestureRecognizer Command="{Binding SaveCommand}" NumberOfTapsRequired="1" />
                </Grid.GestureRecognizers>
            </Grid>-->
            <ActivityIndicator  Grid.RowSpan="4"
                                Color="{StaticResource LightBlueColor}" 
                                IsRunning="{Binding IsBusy}"
                                IsVisible="{Binding IsBusy}"
                                VerticalOptions="Center"
                                HorizontalOptions="Center">
                <ActivityIndicator.WidthRequest>
                    <OnPlatform x:TypeArguments="x:Double" iOS="100" Android="100" WinPhone="400" />
                </ActivityIndicator.WidthRequest>
            </ActivityIndicator>
        </Grid>
        
    </ContentPage.Content>
</ContentPage>